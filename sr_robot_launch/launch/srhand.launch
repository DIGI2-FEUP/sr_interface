<launch>
  <!-- This launch file is for a left UR10 arm and shadow hand -->
  <arg name="hand_id" default="rh"/>
  <!-- set to false if you want to use real robots, true if you need the gazebo simulation -->
  <arg name="sim" default="true"/>
  <!-- Use xacro prefix for hand or not -->
  <arg name="use_xacro_prefix" default="false"/>
  <!--Left or right hand/arm  -->
  <arg name="xacro_prefix" default="l"/>
  <!-- Set to true for debugging -->
  <arg name="debug" default="false"/>
  <!-- Set to true to spawn trajectory controllers for the hands(the trajectory controller overwrites continuously the joint position command, preventing direct control via topics-->
  <arg name="hand_trajectory" default="true"/>
  <!-- Set to true to spawn the position controllers for the hands-->
  <arg name="hand_ctrl" default="true"/>
  <!-- Serial number of the hand to be used-->
  <arg name="hand_serial" default="1322"/>
  <!-- Loads the robot description -->
  <arg name="robot_description"
       default="$(find sr_description)/robots/shadowhand_motor.urdf.xacro"/>
  <!-- Allows to specify the ethernet interface/s to be used for ethercat devices. It defaults to the value of the env var ETHERCAT_PORT
       More than one interface can be specified by concatenating them using underscore as a separator (e.g eth1_eth2_eth3) -->
  <arg name="eth_port" default="$(optenv ETHERCAT_PORT eth0)"/>
  <!-- Set to true to allow planning trajectories-->
  <arg name="use_moveit" default="false"/>

  <!-- SIMULATED ROBOTS -->
  <group if="$(arg sim)">
    <arg name="world_name"
         value="$(find sr_description)/other/worlds/shadowhand.world"/>
    <arg name="paused" value="false"/>
    <param name="/hand/mapping/$(arg hand_serial)" value="$(arg hand_id)"/>
    <param name="/hand/joint_prefix/$(arg hand_serial)" value="$(arg hand_id)_"/>
    <param name="robot_description"
           command="$(find xacro)/xacro.py '$(arg robot_description)'"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" default="$(arg world_name)"/>
      <arg name="gui" default="true"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>
    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -param robot_description -model usrh -z 0.1 "
          respawn="false" output="screen"/>
	<rosparam command="load" file="$(find sr_description)/hand/config/$(arg hand_id)_controller_gazebo.yaml"/>
  </group>
  
  <!-- REAL ROBOTS -->
  <group unless="$(arg sim)">
    <!-- launch for right hand -->
    <include file="$(find sr_edc_launch)/sr_edc.launch">
      <arg name="hand_serial" value="$(arg hand_serial)"/>
      <arg name="eth_port" value="$(arg eth_port)"/>
      <arg name="robot_description"
           value="$(arg robot_description)"/>
      <arg name="debug" value="$(arg debug)"/>
      <arg name="pwm_control" value="true"/>
      <arg name="hand_id" value="$(arg hand_id)"/>
    </include>
    <group if="$(arg hand_ctrl)">
      <node name="$(arg hand_id)_controllers_spawner" pkg="controller_manager"
            type="spawner" output="screen"
            args="--wait-for=/calibrated --shutdown-timeout=1.0 sh_$(arg hand_id)_ffj0_position_controller sh_$(arg hand_id)_ffj3_position_controller sh_$(arg hand_id)_ffj4_position_controller sh_$(arg hand_id)_mfj0_position_controller sh_$(arg hand_id)_mfj3_position_controller sh_$(arg hand_id)_mfj4_position_controller sh_$(arg hand_id)_rfj0_position_controller sh_$(arg hand_id)_rfj3_position_controller sh_$(arg hand_id)_rfj4_position_controller sh_$(arg hand_id)_lfj0_position_controller sh_$(arg hand_id)_lfj3_position_controller sh_$(arg hand_id)_lfj4_position_controller sh_$(arg hand_id)_lfj5_position_controller sh_$(arg hand_id)_thj1_position_controller sh_$(arg hand_id)_thj2_position_controller sh_$(arg hand_id)_thj3_position_controller sh_$(arg hand_id)_thj4_position_controller sh_$(arg hand_id)_thj5_position_controller sh_$(arg hand_id)_wrj1_position_controller sh_$(arg hand_id)_wrj2_position_controller"/>
    </group>
  </group>
  
  <!-- MOVEIT -->
  <group if="$(arg use_moveit)">
    <include file="$(find sr_moveit_hand_config)/launch/moveit_planning_and_execution.launch">
      <arg name="load_robot_description" value="false"/>
    </include>
    <include file="$(find sr_moveit_hand_config)/launch/default_warehouse_db.launch"/>
  </group>
  
  <!-- Trajectory controller -->
  <group if="$(arg hand_ctrl)">  
    <node name="$(arg hand_id)_trajectory_controller" pkg="sr_utilities" type="trajectory_controller_spawner.py"
          args="$(arg hand_trajectory)" />
  </group>
</launch>
